% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readArgs.R
\name{readArgs}
\alias{readArgs}
\title{Read Arguments from command line}
\usage{
readArgs(..., .envir = parent.frame(), .silent = FALSE)
}
\arguments{
\item{\dots}{arguments allowed to be read from command line (other values
are ignored). Value is set if found on command line input, nothing is done,
if value is not found.}

\item{.envir}{environment in which the variables should be written (by
default the environment from which the function is called)}

\item{.silent}{boolean which allows to suppress status messages}
}
\description{
Function reads arguments from command line of the structure value=content
and transforms them to R-Values, if they are called as allowed arguments.
}
\examples{

# Create an R-file "test.R" with following code:
value1 <- "old"
value2 <- 2
value3 <- "willstaythesame"
readArgs("value1", "value2")
print(value1)
print(value2)
print(value3)

# Open the command line and execute the following code:
# Rscript test.R value1=new value2=3 value3=isnotallowed

# Output:
# [1]
# [1] ### READ COMMAND LINE - ASSIGNED CONFIGURATION ###
# [1] value1 <- new
# [1] value2 <- 3
# [1] ### READ COMMAND LINE - CONFIGURATION END ###
# [1]
# [1] "new"
# [1] 3
# [1] "willstaythesame"


### function that reads all allowed arguments from command line###
}
\seealso{
\code{\link{manipulateConfig}}
}
\author{
Jan Philipp Dietrich
}
